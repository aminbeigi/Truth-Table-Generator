{"version":3,"sources":["App/styled.js","components/ExpressionField/styled.js","components/ExpressionField/ExpressionField.tsx","components/TruthTable/styled.js","components/TruthTable/TruthTableHeader/TruthTableHeader.tsx","components/TruthTable/TruthTableRow/TruthTableRow.tsx","components/TruthTable/TruthTable.tsx","components/Icons/styled.js","components/Icons/Icons.tsx","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.tsx","App/App.tsx","shared/helper.ts","reportWebVitals.ts","index.tsx"],"names":["Title","styled","h1","IconWrapper","div","Wrapper","StyledInputGroup","InputGroup","StyledFormControl","FormControl","ExpressionField","onValueChange","onChange","size","className","aria-label","aria-describedby","placeholder","StyledTable","Table","TruthTableHeader","tableHeader","TruthTableRow","tableRow","expressionSolution","map","tableData","i","TruthTable","tableHeaders","tableRows","expression","expressionSolutions","row_length","Math","pow","length","push","BodyText","p","UL","ul","LI","li","StyledModalTitle","Modal","Icons","useState","show","setShow","handleClose","githubLink","onAuxClick","window","open","onClick","location","href","onHide","Header","closeButton","Body","Footer","Button","variant","SyntaxOkay","h2","SyntaxBad","ErrorMessageText","ErrorMessage","errorObject","value","index","operator","array","slice","console","log","App","setValue","emptyValue","setEmptyValue","invalidValue","setInvalidValue","setTableHeaders","setTableRows","setExpressionSolutions","error","setErrorObject","useEffect","document","body","style","backgroundColor","test","e","search","indexOf","operandArray","operand","c","pop","includes","n","outputArray","boolArray","bin","Number","toString","repeat","permute","filter","remove","expressionSolutionArray","boolStr","evalString","replaceAll","RegExp","SyntaxError","Function","htmlValue","target","replace","Container","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.083477ff.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    font-size: 4.5rem;\r\n    font-family: 'Major Mono Display',Courier New;\r\n    margin-top: 125px;\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    right: 0;\r\n`;","import styled from 'styled-components';\r\nimport { InputGroup, FormControl } from 'react-bootstrap'\r\n\r\nexport const Wrapper = styled.div`\r\n`;\r\n\r\nexport const StyledInputGroup = styled(InputGroup)`\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n    font-size: 2.75rem !important;\r\n    color: white !important;\r\n    margin: 0 auto !important;\r\n    border-top: none !important;\r\n    border-left: none !important;\r\n    border-right: none !important;\r\n    max-width: 777px;\r\n    text-align: center;\r\n    background-color: transparent !important;\r\n    outline: 0px !important;\r\n    -webkit-appearance: none;\r\n    box-shadow: none !important;\r\n`;","import React from 'react'\r\nimport { StyledInputGroup, StyledFormControl, Wrapper } from './styled'\r\n\r\ninterface Props { \r\n    onValueChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const ExpressionField: React.FC<Props> = ({onValueChange}) => {\r\n    return (\r\n        <Wrapper>\r\n            <StyledInputGroup onChange={onValueChange} size=\"lg\" className=\"mb-3\">\r\n                <StyledFormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Enter an expression\"/>\r\n            </StyledInputGroup>\r\n        </Wrapper>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport const StyledTable = styled(Table)`\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    max-width: 90%;\r\n    border: 0;\r\n`;","import React from 'react'\r\n\r\ninterface Props { \r\n    tableHeader: string;\r\n}\r\n\r\nexport const TruthTableHeader: React.FC<Props> = ({tableHeader}) => {\r\n    return (\r\n            <th>{tableHeader}</th>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ninterface Props { \r\n    tableRow: Boolean[];\r\n    expressionSolution: Boolean;\r\n}\r\n\r\nexport const TruthTableRow: React.FC<Props> = ({tableRow, expressionSolution}) => {\r\n    return (\r\n        <tr>\r\n            {tableRow.map((tableData, i) => { \r\n                    return (\r\n                        (tableData)\r\n                            ? <td key={i}>T</td>\r\n                            : <td key={i}>F</td> \r\n\r\n                    )})\r\n                }\r\n                            \r\n            { expressionSolution\r\n                ? <td>T</td>\r\n                : <td>F</td>}\r\n\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { StyledTable } from './styled'\r\nimport { TruthTableHeader } from './TruthTableHeader/TruthTableHeader'\r\nimport { TruthTableRow } from './TruthTableRow/TruthTableRow'\r\n\r\ninterface Props { \r\n    tableHeaders: string[];\r\n    tableRows: Boolean[][];\r\n    expression: string;\r\n    expressionSolutions: Boolean[];\r\n}\r\n\r\nexport const TruthTable: React.FC<Props> = ({tableHeaders, tableRows, expression, expressionSolutions}) => {\r\n    const row_length = [];\r\n    for (let i = 0; i < Math.pow(2, tableHeaders.length); ++i) {\r\n        row_length.push('F');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StyledTable>\r\n                <thead>\r\n                    <tr>\r\n                        {tableHeaders.map((tableHeader, i) => { \r\n                            return (\r\n                                <TruthTableHeader key={i} tableHeader={tableHeader}/>\r\n                            )})\r\n                        }\r\n                        <th>{expression}</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {tableRows.map((tableRow, i) => { \r\n                            return (\r\n                                    <TruthTableRow key={i} tableRow={tableRow} expressionSolution={expressionSolutions[i]}/>\r\n                            )})\r\n                        }\r\n              </tbody>\r\n            </StyledTable>\r\n        </div>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nexport const BodyText = styled.p`\r\n    color: black !important;\r\n    margin: 4px;\r\n`;\r\n\r\nexport const UL = styled.ul`\r\n    list-style: initial;\r\n    margin: initial;\r\n    padding: 0 0 0 40px;\r\n`;\r\n\r\nexport const LI = styled.li`\r\n    display: list-item;\r\n    color: black;\r\n`;\r\n\r\nexport const StyledModalTitle = styled(Modal.Title)`\r\n    color: black !important;\r\n    margin: 4px;\r\n`;","import React, { useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { BodyText, UL, LI, StyledModalTitle } from './styled'\r\n\r\nexport const Icons: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const githubLink = 'https://github.com/aminbeigi/truth-table-generator';\r\n\r\n    return (\r\n        <>\r\n            <div><button onAuxClick={() => window.open(githubLink)} onClick={() => window.location.href = githubLink}><i className=\"fab fa-github\"></i></button></div>\r\n            <div><button onClick={handleShow}><i className=\"far fa-question-circle\"></i></button></div>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <StyledModalTitle>Help</StyledModalTitle>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <BodyText>This tool generates truth tables for propositional logic formulas.</BodyText>\r\n                    <BodyText>For example, the formula p ∧ q  could be written as p || q, as p.</BodyText>\r\n                    <BodyText>Enter an expression in the input box to get started.</BodyText>\r\n                    <p></p>\r\n                    <BodyText>Valid operators:</BodyText>\r\n                    <UL>\r\n                        <LI>\r\n                            And: &amp;&amp;\r\n                        </LI>\r\n                        <LI>\r\n                            Or: ||\r\n                        </LI>\r\n                        <LI>\r\n                            Negation: !\r\n                        </LI>\r\n                    </UL>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Close \r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    text-align: center;\r\n    color: red;\r\n`;\r\n\r\nexport const SyntaxOkay = styled.h2`\r\n    color: grey;\r\n    display: inline;\r\n`;\r\n\r\nexport const SyntaxBad = styled.h2`\r\n    color: red;\r\n    display: inline;\r\n`;\r\n\r\nexport const ErrorMessageText = styled.p`\r\n    color: grey;\r\n`;","import React from 'react'\r\nimport { Wrapper, SyntaxOkay, SyntaxBad, ErrorMessageText } from './styled'\r\n\r\ninterface Props { \r\n    errorObject: {\r\n        error: string,\r\n        value: string,\r\n        index: number\r\n    };\r\n}\r\n\r\nexport const ErrorMessage: React.FC<Props> = ({errorObject}) => {\r\n    if (errorObject['error'] === \"Invalid syntax.\") {\r\n        return (\r\n            <Wrapper>\r\n                <ErrorMessageText>{errorObject['error']}</ErrorMessageText>\r\n            </Wrapper>\r\n    )   \r\n    }\r\n    let value = errorObject['value'];\r\n    let index = errorObject['index'];\r\n    let operator = value[index];\r\n    const array = [value.slice(0,index), value.slice(index+1)]; // only slice first occurence\r\n    console.log('value: ', value)\r\n    console.log('index: ', index)\r\n    console.log(array)\r\n    return (\r\n        <Wrapper>\r\n            <SyntaxOkay>{array[0]}<SyntaxBad>{operator}</SyntaxBad>{array[1]}</SyntaxOkay>\r\n            <ErrorMessageText>{errorObject['error']}</ErrorMessageText>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport './Overrides.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport { Title, IconWrapper } from './styled';\n\nimport { ExpressionField } from '../components/ExpressionField/ExpressionField';\nimport { TruthTable } from '../components/TruthTable/TruthTable';\nimport { Icons } from '../components/Icons/Icons';\nimport { ErrorMessage } from '../components/ErrorMessage/ErrorMessage';\n\nimport { permute, remove, parse, replaceHTML } from '../shared/helper';\n\nexport const App: React.FC = () => {\n    const [value, setValue] = useState<string>('');\n    const [emptyValue, setEmptyValue] = useState<Boolean>();\n    const [invalidValue, setInvalidValue] = useState<Boolean>();\n    const [tableHeaders, setTableHeaders] = useState<string[]>([]);\n    const [tableRows, setTableRows] = useState<Boolean[][]>([]);\n    const [expressionSolutions, setExpressionSolutions] = useState<Boolean[]>([]);\n    const [errorObject, setErrorObject] = useState({error: '1', value: '1', index: -1});\n\n    const onValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let htmlValue: string = e.target.value;\n        htmlValue = replaceHTML(htmlValue);\n        setValue(htmlValue);\n        e.target.value = htmlValue;\n    }\n\n    // on start\n    useEffect(() => {\n\n        document.body.style.backgroundColor = '#212529' \n        console.log(\"ready\")\n    }, [])\n\n    useEffect(() => {\n        if (value.length === 0) {\n            setEmptyValue(false);\n            return;\n        }\n        setEmptyValue(true);\n        try {\n            if (/(∧|∨|¬)$|^(∧|∨|¬)/g.test(value)) {\n                throw \"The operator is missing an operand.\";\n            } \n            \n            if (/[/|]/g.test(value)) {\n                throw \"The character | shouldn't be here.\";\n            } \n\n            if (/[&]/g.test(value)) {\n                throw \"The character & shouldn't be here.\";\n            } \n\n        } catch (e) {\n            if (e === \"The operator is missing an operand.\") {\n                const index = value.search(/(∧|∨|¬)$|^(∧|∨|¬)/g);\n                setErrorObject({'error': e, 'value': value, 'index': index});\n            }\n            else if (e === \"The character | shouldn't be here.\") {\n                setErrorObject({'error': e, 'value': value, 'index': value.indexOf('|')});\n            }\n            else if (e === \"The character | shouldn't be here.\") {\n                setErrorObject({'error': e, 'value': value, 'index': value.indexOf('&')});\n            }\n            setInvalidValue(true);\n            return;\n        }\n\n        let operandArray: string[]|string = [];\n        let operand: string = '';\n        for (let c of value) {\n            if (c === '|' || c === '&' || c === '¬' || c === '(' || c === ')') {\n                // pass;\n            }\n            else if (c === '∨' || c === '∧') {\n                operand = '';\n            }\n            else { \n                operand += c;\n\n                if (operand.length > 1) {\n                    operandArray.pop();\n                }\n\n                if (operandArray.includes(operand)) {\n                    operandArray.push('');\n                } else {\n                    operandArray.push(operand);\n                }\n            } \n        }\n\n        operandArray = remove(operandArray, '');\n        const tableRows = permute(operandArray.length);\n\n        let expressionSolutionArray: Boolean[] = [];\n        for (let boolArray of tableRows) {\n\n            let boolStr: string;\n            let bool: boolean;\n            let evalString: string = value;\n\n            evalString = evalString.replaceAll('∨', '||');\n            evalString = evalString.replaceAll('∧', '&&');\n            evalString = evalString.replaceAll('¬', '!');\n\n            for (let i = 0; i < operandArray.length; ++i) {\n                bool = boolArray[i]\n                if (bool){\n                    boolStr = '1';\n                } else {\n                    boolStr = '0';\n                }\n                evalString = evalString.replaceAll(new RegExp(\"\\\\b\" + operandArray[i] + \"\\\\b\",  'g'), boolStr);\n            }\n                try {\n                    if (/[^10|&!()]/.test(evalString)) {\n                        throw SyntaxError;\n                    }\n                    let expression: number = parse(evalString);\n                    // will sometimes return bool true instead of number 1??\n                    if (expression == 1 || expression) {\n                        expressionSolutionArray.push(true);\n                    } else if (expression == 0 || expression) {\n                        expressionSolutionArray.push(false);\n                    }\n                    setInvalidValue(false)\n                } catch (e) {\n                    setErrorObject({'error': \"Invalid syntax.\", 'value': value, 'index': -1})\n                    setInvalidValue(true)\n                }\n        }\n        setTableHeaders(operandArray);\n        setTableRows(tableRows)\n        setExpressionSolutions(expressionSolutionArray);\n    }, [value]);\n\n    return (\n        <>\n            <Title>Truth Table Generator</Title>\n            <ExpressionField onValueChange={onValueChange}/>\n\n            { !emptyValue\n                ? ''\n                :\n                invalidValue\n                    ? <ErrorMessage errorObject={errorObject}/>\n                    :   \n                    <Container className=\"truth-table-container\">\n                        <TruthTable tableHeaders={tableHeaders} tableRows={tableRows} expression={value} expressionSolutions={expressionSolutions}/>\n                    </Container>\n            }\n            <IconWrapper>\n                <Icons />\n            </IconWrapper>\n        </>\n    )\n}","export const permute = (n: number): boolean[][] => {\r\n    let outputArray: boolean[][] = []\r\n    for (let i = 0; i < Math.pow(2, n) ; ++i) {\r\n        let boolArray = [];\r\n        let bin = new Number(i).toString(2);\r\n        if (bin.length < n) {\r\n            let zeros = '0'.repeat(n - bin.length);\r\n            bin = zeros + bin;\r\n        }\r\n        for (let c of bin) {\r\n            if (c === '1') {\r\n                boolArray.push(true);\r\n            } else {\r\n                boolArray.push(false);\r\n            }\r\n        }       \r\n        \r\n        outputArray.push(boolArray);\r\n    }\r\n    return outputArray;\r\n}\r\n\r\nexport const remove = (array: string[], value: string): string[] => {\r\n    return array.filter(i => i !== value);\r\n}\r\n\r\n// using Function constructor as code can only be executed client side on users browser\r\nexport const parse = (str: string): number => {\r\n    return Function(`'use strict'; return (${str})`)()\r\n}\r\nexport const replaceHTML = (str: string): string => {\r\n        str = str.replace(/[^a-zA-Z|&∨∧¬()!]/ig, '');\r\n        str = str.replace(/[^\\x00-\\x7F∨∧¬]/ig, ''); // block all none ascii characters\r\n        str = str.replace('||', '∨');\r\n        str = str.replace('&&', '∧');\r\n        str = str.replace('!', '¬');\r\n        return str;\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}